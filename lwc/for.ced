'/bootstrap':defAtom(binding::'/bootstrap':type).
'/bootstrap':signature(for(Given,Goal,Cmd)::'/imperative':command,[Given::'/bootstrap':list(binding),Goal::'/bootstrap':pred,Cmd::'/imperative':command]).
'/bootstrap':projection(for(Given,Goal,Cmd)::'/imperative':command,'/bootstrap':vert(['/bootstrap':horiz(['/bootstrap':label(!for),'/bootstrap':vis(Goal::'/bootstrap':pred),'/bootstrap':label(!given),'/bootstrap':vis(Given::'/bootstrap':list(binding))]),'/bootstrap':horiz(['/bootstrap':label(!'    '),'/bootstrap':vis(Cmd::'/imperative':command)])])).
'/util':behavior(for(Goal,Given,Cmd)::'/imperative':command,!'should execute Cmd if Goal holds', ('/imperative':execute(for([],builtin:true,'/imperative':print('/imperative':const(1),'/bootstrap':number)),[],Out),'/util':assertEqual(Out,[1::'/bootstrap':number],'/bootstrap':list('/bootstrap':typedTerm)))).
'/util':behavior(for(Goal,Given,Cmd)::'/imperative':command,!'should not execute anything if Goal does not hold', ('/imperative':execute(for([],builtin:fail,'/imperative':print('/imperative':const(1),'/bootstrap':number)),[],Out),'/util':assertEqual(Out,[],'/bootstrap':list('/bootstrap':typedTerm)))).
'/bootstrap':signature(bind(Expr,T,V)::binding,[Expr::'/imperative':expr(T),T::'/bootstrap':type,V::T]).
'/bootstrap':projection(bind(Expr,T,V)::binding,'/bootstrap':horiz(['/bootstrap':vis(V::T),'/bootstrap':label(! (::)),'/bootstrap':vis(T::'/bootstrap':type),'/bootstrap':label(! (=)),'/bootstrap':vis(Expr::'/imperative':expr(T))])).
'/util':behavior(for(Goal,Given,Cmd)::'/imperative':command,!'should consider all Given bindings', ('/imperative':execute('/imperative':block(['/imperative':assign(X,'/imperative':const(1),'/bootstrap':number),'/imperative':assign(Y,'/imperative':const(2),'/bootstrap':number),for([bind('/imperative':var(X),'/bootstrap':number,XPrime),bind('/imperative':var(Y),'/bootstrap':number,YPrime)],'/Functional':eval('/Functional':applyBinOp('/Functional':const(XPrime),'/Functional':numPlus,'/Functional':const(YPrime)),'/bootstrap':number,N),'/imperative':print('/imperative':const(N),'/bootstrap':number))]),[],Out),'/util':assertEqual(Out,[3::'/bootstrap':number],'/bootstrap':list('/bootstrap':typedTerm)))).
'/imperative':exec(for(Given,Goal,Cmd),Sigma,SigmaPrime,In,InPrime,Out,OutPrime):-evalBindings(Given,Sigma),builtin:findall(Cmd,'/imperative':command,Goal,Cmds),'/imperative':exec('/imperative':block(Cmds),Sigma,SigmaPrime,In,InPrime,Out,OutPrime).
'/bootstrap':signature(evalBindings(Given,Sigma)::'/bootstrap':pred,[Given::'/bootstrap':list(binding),Sigma::'/imperative':state]).
evalBindings([],_):-builtin:true.
evalBindings([bind(Expr,T,V)|Rest],Sigma):-'/imperative':eval(Expr,Sigma,T,V),evalBindings(Rest,Sigma).
